---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: mythical-requester
  name: mythical-requester
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      name: mythical-requester
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "true"
      labels:
        name: mythical-requester
    spec:
      containers:
      - env:
        - name: NAMESPACE
          value: production
        - name: TRACING_COLLECTOR_HOST
          value: <tracingEndpoint>
        - name: TRACING_COLLECTOR_PORT
          value: "4317"
        #- name: ENDPOINT_TYPE
        #  value: BORING
        - name: AUTHUSER
          value: grafanaopsuser
        - name: AUTHPASSWORD
          value: <password>
        - name: OTEL_EXPORTER_OTLP_TRACES_INSECURE
          value: "true"
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: ip=$(POD_IP)
        image: grafana/intro-to-mltp:mythical-beasts-requester-latest
        imagePullPolicy: Always
        name: mythical-requester
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: mythical-server
  name: mythical-server
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  selector:
    matchLabels:
      name: mythical-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "true"
      labels:
        name: mythical-server
    spec:
      containers:
      - env:
        - name: NAMESPACE
          value: production
        - name: TRACING_COLLECTOR_HOST
          value: <tracingEndpoint>
        - name: TRACING_COLLECTOR_PORT
          value: "4317"
        #- name: ENDPOINT_TYPE
        #  value: BORING
        - name: AUTHUSER
          value: grafanaopsuser
        - name: AUTHPASSWORD
          value: <password>
        - name: OTEL_EXPORTER_OTLP_TRACES_INSECURE
          value: "true"
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: ip=$(POD_IP)
        image: grafana/intro-to-mltp:mythical-beasts-server-latest
        imagePullPolicy: Always
        name: mythical-server
        ports:
        - containerPort: 4000
          protocol: TCP
        resources:
          limits:
            cpu: "0.5"
          requests:
            cpu: "0.5"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: mythical-recorder
  name: mythical-recorder
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      name: mythical-recorder
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "true"
      labels:
        name: mythical-recorder
    spec:
      containers:
      - env:
        - name: NAMESPACE
          value: production
        - name: TRACING_COLLECTOR_HOST
          value: <tracingEndpoint>
        - name: TRACING_COLLECTOR_PORT
          value: "4317"
        - name: OTEL_EXPORTER_OTLP_TRACES_INSECURE
          value: "true"
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: ip=$(POD_IP)
        image: grafana/intro-to-mltp:mythical-beasts-recorder-latest
        imagePullPolicy: Always
        name: mythical-recorder
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: mythical-queue
  name: mythical-queue
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      name: mythical-queue
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "true"
      labels:
        name: mythical-queue
    spec:
      containers:
      - env:
        - name: NAMESPACE
          value: production
        image: rabbitmq:management
        imagePullPolicy: Always
        name: mythical-queue
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: mythical-database
  name: mythical-database
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mythical-database
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io.scrape: "true"
      labels:
        name: mythical-database
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: mythical
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres:14.5
        imagePullPolicy: Always
        name: mythical-requester
        ports:
        - containerPort: 5432
          protocol: TCP
        resources:
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: mythical-beasts-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mythical-beasts-data
        persistentVolumeClaim:
          claimName: mythical-beasts-data
